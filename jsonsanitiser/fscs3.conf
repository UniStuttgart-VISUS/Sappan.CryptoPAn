# <copyright file="fscs3.conf" company="Universität Stuttgart">
# Copyright © 2021 SAPPAN Consortium. All rights reserved.
# </copyright>
# <author>Christoph Müller</author>


input {
    s3 {
        codec => "json"
        aws_credentials_file => "/root/fscs3cred.txt"
        temporary_directory => "/root/fscs3tmp"
        bucket => ""
        prefix => "data/events/_organization=visus_university_of_stuttgart/"
        region => "eu-west-1"
        sincedb_path => "/usr/share/logstash/data/plugins/inputs/s3/sincedb_fscs3"
    }

#     file {
#         path => "/root/events/**/*.jsonl.gz"
#         codec => "json"
#         start_position => "beginning"
#         sincedb_path => "/dev/null"
#         mode => "read"
#     }
}

filter {

    # Perform a first-class hack like suggested at
    # http://vrepin.org/vr/Logstash-filter-external-script/ - I can't believe
    # that actually works ...
    # 
    # The idea is that in a first step, we add a new field to the event called 
    # "sanitised_event".
    ruby {
        code => '
            require "json"
            require "open3"
            json = event.to_json()
            #json.qsub! "\\", "\\\\"
            #json.gsub! "\"", "\\\""
            #puts "#{json}"
            #json = %x[echo "#{json}" | /root/jsonsanitiser -c /root/fscs3sanitiser.json -i]
            Open3.popen2("/root/jsonsanitiser -c /root/fscs3sanitiser.json -i") { | i, o, t |
                i.print json
                i.close
                json = o.read
            }
            event.set("sanitised_event", json)
        '
    }

    # In the second step, if the event has our previously added fieldi
    # "sanitised_event", we use a JSON filter and tell it that this field is the
    # event source and remove it afterwards.
    if [sanitised_event] =~ /.+/ {
        json {
            source => "sanitised_event"
            remove_field => [ "sanitised_event" ] 
        }
    }

    # Copy the event type to metadata such that we can distribute different
    # types of events to different indices.
    if [event_type] {
        mutate {
            copy => {
                "[event_type]" => "[@metadata][index]"
            }
        }
    } else {
        mutate {
            add_field => {
                "[@metadata][index]" => "unknown"
            }
        }
    }
}

output {
    stdout {
        codec => rubydebug
    }

#    file {
#        path => "/root/fscs3demo/test.txt"
#    }

    elasticsearch {
        hosts => [ "sarba:9200" ]
        user => "logstash_writer"
        password => ""
        ssl => true
        ssl_certificate_verification => false
        index => "ustuttevents-%{[@metadata][index]}"
    }

    elasticsearch {
        hosts => [ "sarba:9200" ]
        user => "logstash_writer"
        password => ""
        ssl => true
        ssl_certificate_verification => false
        index => "ustuttevents-all"
    }

}

